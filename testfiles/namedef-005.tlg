This is a generated file for the l3build validation system.
Don't change this file in any respect.
============================================================
TEST 1:  Double hashes 
============================================================
> \foo=macro:#1{->
 #1
 ##[parm]
 ###1
 ####[parm]
 #####1
 ######[parm]
 {
! Illegal parameter number in definition of \foo.
<to be read again> 
                   ^^J
l. ...  }
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.
> \foo=macro:#1{->
 ##
 #1
 ##[parm]
 ###1
 ####[parm]
 #####1
 ######[parm]
 {
! Illegal parameter number in definition of \foo.
<to be read again> 
                   ^^J
l. ...  }
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.
! Illegal parameter number in definition of \foo.
<to be read again> 
                   ^^J
l. ...  }
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.
! Illegal parameter number in definition of \foo.
<to be read again> 
                   ^^J
l. ...  }
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.
> \foo=macro:#1{->
 ##
 ##
 ####
 ####
 ######
 ######
 {
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Unknown parameter #[parm] in definition of \foo.l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Unknown parameter #[parm] in definition of \foo.l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Unknown parameter #[parm] in definition of \foo.l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
> \foo=macro:->
 ##[parm]
 ##[parm]
 ####[parm]
 ####[parm]
 ######[parm]
 ######[parm]
============================================================
============================================================
TEST 2:  Nested \named definitions 
============================================================
> \foo=macro:#1#2->\named \def \bar ##[C]#1##[D]{\baz ##[C]##[D]#2}
> \bar=macro:#1\a #2->\baz #1#2\b 
============================================================
============================================================
TEST 3:  Define an active char 
============================================================
> ~=macro:#1->(#1)
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Parameter #[A] duplicated in definition of ~.
l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Parameters must be numbered consecutively.
<to be read again> 
                   1
l. ...  }
I've inserted the digit you should have used after the #.
Type `1' to delete what you did use.
> ~=macro:#1#21->(#1)
============================================================
============================================================
TEST 4:  Prefix order doesn't matter (anymore) 
============================================================
> \foo=\long macro:#1->#1
> \foo=\protected macro:#1->#1
> \foo=\protected\long macro:#1->#1
> \foo=\outer macro:#1->#1
> \foo=\long\outer macro:#1->#1
> \foo=\protected\outer macro:#1->#1
> \foo=\protected\long\outer macro:#1->#1
============================================================
============================================================
TEST 5:  Repeated parameters 
============================================================
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Parameter #[A] duplicated in definition of \foo.l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Parameters must be numbered consecutively.
<to be read again> 
                   1
l. ...  }
I've inserted the digit you should have used after the #.
Type `1' to delete what you did use.
> \foo=macro:#1#21->#1
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Parameter #[A] duplicated in definition of \foo.l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Parameter #[A] duplicated in definition of \foo.l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Parameter #[A] duplicated in definition of \foo.l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Parameter #[A] duplicated in definition of \foo.l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Parameter #[A] duplicated in definition of \foo.l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Parameter #[A] duplicated in definition of \foo.l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Parameter #[A] duplicated in definition of \foo.l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Parameter #[A] duplicated in definition of \foo.l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Parameter #[A] duplicated in definition of \foo.l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Parameter #[A] duplicated in definition of \foo.l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Parameters must be numbered consecutively.
<to be read again> 
                   1
l. ...  }
I've inserted the digit you should have used after the #.
Type `1' to delete what you did use.
! Parameters must be numbered consecutively.
<to be read again> 
                   1
l. ...  }
I've inserted the digit you should have used after the #.
Type `1' to delete what you did use.
! Parameters must be numbered consecutively.
<to be read again> 
                   1
l. ...  }
I've inserted the digit you should have used after the #.
Type `1' to delete what you did use.
! Parameters must be numbered consecutively.
<to be read again> 
                   1
l. ...  }
I've inserted the digit you should have used after the #.
Type `1' to delete what you did use.
! Parameters must be numbered consecutively.
<to be read again> 
                   1
l. ...  }
I've inserted the digit you should have used after the #.
Type `1' to delete what you did use.
! Parameters must be numbered consecutively.
<to be read again> 
                   1
l. ...  }
I've inserted the digit you should have used after the #.
Type `1' to delete what you did use.
! Parameters must be numbered consecutively.
<to be read again> 
                   1
l. ...  }
I've inserted the digit you should have used after the #.
Type `1' to delete what you did use.
! Parameters must be numbered consecutively.
<to be read again> 
                   1
l. ...  }
I've inserted the digit you should have used after the #.
Type `1' to delete what you did use.
! You already have nine parameters.
<argument> ##1##1##1##1##1##1##1##1##1##1
                                         ##1
l. ...  }
I'm going to ignore the # sign you just used.
! You already have nine parameters.
<argument> ##1##1##1##1##1##1##1##1##1##1##1
l. ...  }
I'm going to ignore the # sign you just used.
> \foo=macro:#1#21#31#41#51#61#71#81#9111->#1
============================================================
============================================================
TEST 6:  Unknown parameters 
============================================================
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Unknown parameter #[B] in definition of \foo.
l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
> \foo=macro:->##[B]
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Unknown parameter #[A] in definition of \foo.
l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Unknown parameter #[A] in definition of \foo.
l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Unknown parameter #[B] in definition of \foo.
l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Unknown parameter #[B] in definition of \foo.
l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
> \foo=macro:#1->##[A]##[A]##[B]##[B]
============================================================
============================================================
TEST 7:  Catcode change 
============================================================
> \foo=macro:#1->#1
============================================================
============================================================
TEST 8:  Missing delimiter 
============================================================
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Missing ] inserted in definition of \wrong.
l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Missing ] inserted in definition of \wrong.
l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
> \wrong=macro:#1->#1
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Missing ] inserted in definition of \wrong.
l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Unknown parameter #[oops] in definition of \w...
l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
> \wrong=macro:#1->##[oops]
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Missing ] inserted in definition of \wrong.
l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Missing ] inserted in definition of \wrong.
l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
> \wrong=macro:#1->{#1}#1
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Missing ] inserted in definition of \wrong.
l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \::error 
                    ! namedef: Unknown parameter #[oops{##[oops]}] in defini...
l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Illegal parameter number in definition of \wrong.
<to be read again> 
                   [
l. ...  }
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.
> \wrong=macro:#1->##[oops{##[oops]}]
============================================================
============================================================
TEST 9:  Active delimiter (undefined) 
============================================================
> \foo=macro:#1->#1
============================================================
============================================================
TEST 10:  Active delimiter (\relax ) 
============================================================
> \foo=macro:#1->#1
============================================================
============================================================
TEST 11:  Active delimiter (\expanded ) 
============================================================
> \foo=macro:#1->#1
============================================================
============================================================
TEST 12:  Active delimiter (macro) 
============================================================
> \foo=macro:#1->#1
============================================================
